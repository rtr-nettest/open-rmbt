{
  "openapi": "3.0.1",
  "info": {
    "title": "Statistic project",
    "description": "Software project",
    "version": "1.0"
  },
  "servers": [
    {
      "url": "http://tomcat10/RMBTStatisticServer",
      "description": "Generated server url"
    }
  ],
  "paths": {
    "/coverage": {
      "get": {
        "tags": [
          "coverage-controller"
        ],
        "summary": "Get coverage information",
        "description": "Get coverage information for a specific point",
        "operationId": "coverage",
        "parameters": [
          {
            "name": "lat",
            "in": "query",
            "description": "Mandatory. Latitude of the client position.",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double"
            },
            "example": 18.2345
          },
          {
            "name": "long",
            "in": "query",
            "description": "Mandatory. Longitude of the client position.",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double"
            },
            "example": 43.1234
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CoveragesDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorResponse"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "coverage-controller"
        ],
        "summary": "Get coverage information",
        "description": "Get coverage information for a specific point",
        "operationId": "coverage_1",
        "parameters": [
          {
            "name": "lat",
            "in": "query",
            "description": "Mandatory. Latitude of the client position.",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double"
            },
            "example": 18.2345
          },
          {
            "name": "long",
            "in": "query",
            "description": "Mandatory. Longitude of the client position.",
            "required": true,
            "schema": {
              "type": "number",
              "format": "double"
            },
            "example": 43.1234
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CoveragesDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorResponse"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/statistics": {
      "post": {
        "tags": [
          "statistic-controller"
        ],
        "summary": "Statistics",
        "operationId": "statistics",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StatisticRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json;charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorResponse"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/opentests": {
      "get": {
        "tags": [
          "open-test-controller"
        ],
        "summary": "Search for open data tests",
        "description": "Date fields have to be submitted as a number, representing the number of milliseconds that have elapsed since midnight, January 1st, 1970 or in the format “yyyy-MM-dd HH:mm:ss”. The time is given in UTC.\n\nDecimal point (Full Stop “.”) is always used to separate the integer part from the fractional part of a number written in decimal form. This is independent from the local or regional settings.\n\nNumeric fields also allow using the comparators ‘>’ and ‘<’ (meaning ‘=>’ and ‘=<’ respectively). Dates have always to be queried as ranges by using these comparators.\n\nString fields allow using the wildcard ‘*’ for matching any literals and ‘?’ for matching one arbitrary literal.\n\nIt is possible, to begin each filter argument with an exclamation mark (!) to negate the filter. E.g. network_type=!LAN will yield all tests where the network type was not LAN.\n\nThe criteria denoted with [] can be used more than once in a query. Data has to match all criteria. If an array for one criterion is given, the data has to match each entry.\n\nGenerally a query on a parameter value ‘null’ is not possible, except for the parameter loc_accuracy, where the value -1 means ‘null’. Non-‘null’ values are queried with any single or multiple values.",
        "operationId": "search_2",
        "parameters": [
          {
            "name": "download_kbit",
            "in": "query",
            "description": "Download speed in kilobit per second",
            "example": ">6903"
          },
          {
            "name": "upload_kbit",
            "in": "query",
            "description": "Upload speed in kilobit per second.",
            "schema": {
              "type": "string"
            },
            "example": "<4670"
          },
          {
            "name": "ping_ms",
            "in": "query",
            "description": "Median ping (round-trip time) in milliseconds, measured on the server side. In previous versions (before June 3rd 2015) this was the minimum ping measured on the client side.",
            "schema": {
              "type": "string"
            },
            "example": "<16"
          },
          {
            "name": "gkz",
            "in": "query",
            "description": "Community ID (Gemeindekennzahl, see <http://www.bev.gv.at/portal/page?_pageid=713,2601287&_dad=portal&_schema=PORTAL>).",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "gkz_sa",
            "in": "query",
            "description": "Community ID (Gemeindekennzahl, see <http://www.statistik.at/web_de/klassifikationen/regionale_gliederungen/gemeinden/index.html>)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cat_technology",
            "in": "query",
            "description": "Technology category of the network, e.g. “3G”, “4G”, “WLAN”.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "client_version",
            "in": "query",
            "description": "Software version number of the client.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "model",
            "in": "query",
            "description": "Name of the device used.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "network_name",
            "in": "query",
            "description": "Display name of the mobile network.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "network_type",
            "in": "query",
            "description": "Type of the network, e.g. MOBILE, LAN, WLAN.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "platform",
            "in": "query",
            "description": "Platform on which the test has been conducted",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "signal_strength",
            "in": "query",
            "description": "Signal strength (RSSI) in dBm.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lte_rsrp",
            "in": "query",
            "description": "LTE signal strength in dBm.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "open_uuid",
            "in": "query",
            "description": "Open-UUID: Identifies the client that conducted the test. The a new Open-UUID is assigned to the client on a regular basis.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "open_test_uuid",
            "in": "query",
            "description": "The UUID of the test.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "client_uuid",
            "in": "query",
            "description": "The private UUID of a client",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "loop_uuid",
            "in": "query",
            "description": "The loop UUID of a single loop test",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "test_uuid",
            "in": "query",
            "description": "The private UUID of a test",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "long",
            "in": "query",
            "description": "Longitude of the client position.",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "lat",
            "in": "query",
            "description": "Latitude of the client position.",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "radius",
            "in": "query",
            "description": "Radius in meters defining based on lat/long parameters",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "mobile_provider_name",
            "in": "query",
            "description": "mobile operator name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "provider_name",
            "in": "query",
            "description": "Name of the internet service provider.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sim_mcc_mnc",
            "in": "query",
            "description": "Network identification of the SIM provider. The digits of MCC and MNC have the same meaning as described in “network_mcc_mnc”.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sim_country",
            "in": "query",
            "description": "Home country of the SIM card in ISO 3166.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "network_country",
            "in": "query",
            "description": "Country of the network in ISO 3166.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "country_geoip",
            "in": "query",
            "description": "Country according client IP address.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "country_location",
            "in": "query",
            "description": "Country of geo-location.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "user_server_selection",
            "in": "query",
            "description": "Legacy",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "loc_accuracy",
            "in": "query",
            "description": "Estimation of accuracy of client location in meters",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "link_name",
            "in": "query",
            "description": "Austrian road/raiway line identifier, e.g. 'A2'",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "public_ip_as_name",
            "in": "query",
            "description": "Name of the AS of the clients public IP.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "time",
            "in": "query",
            "description": "UTC date and time when test was started.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "radio_band",
            "in": "query",
            "description": "Radio band used when conducting the test.",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "cell_area_code",
            "in": "query",
            "description": "Number describing the coarse location of a cell. E.g. the Tracking Area Code (TAC) in case of 4G or the Location Area Code (LAC) in case of 2G or 3G",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "cell_location_id",
            "in": "query",
            "description": "Number identifying the location of a cell. E.g. the 28-bit Cell Identity (CI) in case of 4G, the 28-bit UMTS Cell Identity (CID) in case of UMTS or the 16-bit GSM Cell Identity (CID) in case of GSM.",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "additional_info",
            "in": "query",
            "description": "additional properties to return",
            "schema": {
              "type": "string"
            },
            "example": "download_classification"
          },
          {
            "name": "format",
            "in": "query",
            "description": "Desired output format, either 'csv' or 'json', default: json",
            "schema": {
              "type": "string"
            },
            "example": "json"
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "The field for which the data are sorted. Valid fields are: “download_kbit\", \"upload_kbit\", \"time\", \"signal_strength\", \"lte_rsrp\" and \"ping_ms\"",
            "schema": {
              "type": "string"
            },
            "example": "download_kbit"
          },
          {
            "name": "sort_order",
            "in": "query",
            "description": "The sort_by-Parameter specifies the field, the sort_order-Parameter specifies the direction ('asc' or 'desc').\n Per Default, the results are sorted by the time of the test in descending order (i.e. sort_by=time&sort_order=desc).\n If the sort parameters are specified, the value of the cursor is a multiple of the parameter max_results, otherwise it is an arbitrary number.",
            "schema": {
              "type": "string"
            },
            "example": "asc"
          },
          {
            "name": "max_results",
            "in": "query",
            "description": "This is the page size, i.e. maximum number of result items that are returned per page.\n The default value is 100 items per page. The page size limit is 10000 items, i.e. not more than 10000 results can be displayed in a page.",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 10
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "used for pagination if the query returns more than the number of items according to parameter max_results. The value to be used for the display of the next page is given by the previous response in returned parameter next_cursor.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sender",
            "in": "query",
            "description": "Sender ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "Alias '_'. Will be ignored and can be used to prevent caching of the response.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "asn",
            "in": "query",
            "description": "Provider asn",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "land_cover",
            "in": "query",
            "description": "Land cover number",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "implausible",
            "in": "query",
            "description": "Implausible",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "pinned",
            "in": "query",
            "description": "Pinned",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorResponse"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "open-test-controller"
        ],
        "summary": "Search for open data tests",
        "description": "Date fields have to be submitted as a number, representing the number of milliseconds that have elapsed since midnight, January 1st, 1970 or in the format “yyyy-MM-dd HH:mm:ss”. The time is given in UTC.\n\nDecimal point (Full Stop “.”) is always used to separate the integer part from the fractional part of a number written in decimal form. This is independent from the local or regional settings.\n\nNumeric fields also allow using the comparators ‘>’ and ‘<’ (meaning ‘=>’ and ‘=<’ respectively). Dates have always to be queried as ranges by using these comparators.\n\nString fields allow using the wildcard ‘*’ for matching any literals and ‘?’ for matching one arbitrary literal.\n\nIt is possible, to begin each filter argument with an exclamation mark (!) to negate the filter. E.g. network_type=!LAN will yield all tests where the network type was not LAN.\n\nThe criteria denoted with [] can be used more than once in a query. Data has to match all criteria. If an array for one criterion is given, the data has to match each entry.\n\nGenerally a query on a parameter value ‘null’ is not possible, except for the parameter loc_accuracy, where the value -1 means ‘null’. Non-‘null’ values are queried with any single or multiple values.",
        "operationId": "search",
        "parameters": [
          {
            "name": "download_kbit",
            "in": "query",
            "description": "Download speed in kilobit per second",
            "schema": {
              "type": "string"
            },
            "example": ">6903"
          },
          {
            "name": "upload_kbit",
            "in": "query",
            "description": "Upload speed in kilobit per second.",
            "schema": {
              "type": "string"
            },
            "example": "<4670"
          },
          {
            "name": "ping_ms",
            "in": "query",
            "description": "Median ping (round-trip time) in milliseconds, measured on the server side. In previous versions (before June 3rd 2015) this was the minimum ping measured on the client side.",
            "schema": {
              "type": "string"
            },
            "example": "<16"
          },
          {
            "name": "gkz",
            "in": "query",
            "description": "Community ID (Gemeindekennzahl, see <http://www.bev.gv.at/portal/page?_pageid=713,2601287&_dad=portal&_schema=PORTAL>).",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "gkz_sa",
            "in": "query",
            "description": "Community ID (Gemeindekennzahl, see <http://www.statistik.at/web_de/klassifikationen/regionale_gliederungen/gemeinden/index.html>)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cat_technology",
            "in": "query",
            "description": "Technology category of the network, e.g. “3G”, “4G”, “WLAN”.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "client_version",
            "in": "query",
            "description": "Software version number of the client.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "model",
            "in": "query",
            "description": "Name of the device used.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "network_name",
            "in": "query",
            "description": "Display name of the mobile network.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "network_type",
            "in": "query",
            "description": "Type of the network, e.g. MOBILE, LAN, WLAN.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "platform",
            "in": "query",
            "description": "Platform on which the test has been conducted",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "signal_strength",
            "in": "query",
            "description": "Signal strength (RSSI) in dBm.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lte_rsrp",
            "in": "query",
            "description": "LTE signal strength in dBm.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "open_uuid",
            "in": "query",
            "description": "Open-UUID: Identifies the client that conducted the test. The a new Open-UUID is assigned to the client on a regular basis.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "open_test_uuid",
            "in": "query",
            "description": "The UUID of the test.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "client_uuid",
            "in": "query",
            "description": "The private UUID of a client",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "loop_uuid",
            "in": "query",
            "description": "The loop UUID of a single loop test",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "test_uuid",
            "in": "query",
            "description": "The private UUID of a test",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "long",
            "in": "query",
            "description": "Longitude of the client position.",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "lat",
            "in": "query",
            "description": "Latitude of the client position.",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "radius",
            "in": "query",
            "description": "Radius in meters defining based on lat/long parameters",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "mobile_provider_name",
            "in": "query",
            "description": "mobile operator name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "provider_name",
            "in": "query",
            "description": "Name of the internet service provider.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sim_mcc_mnc",
            "in": "query",
            "description": "Network identification of the SIM provider. The digits of MCC and MNC have the same meaning as described in “network_mcc_mnc”.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sim_country",
            "in": "query",
            "description": "Home country of the SIM card in ISO 3166.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "network_country",
            "in": "query",
            "description": "Country of the network in ISO 3166.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "country_geoip",
            "in": "query",
            "description": "Country according client IP address.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "country_location",
            "in": "query",
            "description": "Country of geo-location.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "user_server_selection",
            "in": "query",
            "description": "Legacy",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "loc_accuracy",
            "in": "query",
            "description": "Estimation of accuracy of client location in meters",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "link_name",
            "in": "query",
            "description": "Austrian road/raiway line identifier, e.g. 'A2'",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "public_ip_as_name",
            "in": "query",
            "description": "Name of the AS of the clients public IP.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "time",
            "in": "query",
            "description": "UTC date and time when test was started.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "radio_band",
            "in": "query",
            "description": "Radio band used when conducting the test.",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "cell_area_code",
            "in": "query",
            "description": "Number describing the coarse location of a cell. E.g. the Tracking Area Code (TAC) in case of 4G or the Location Area Code (LAC) in case of 2G or 3G",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "cell_location_id",
            "in": "query",
            "description": "Number identifying the location of a cell. E.g. the 28-bit Cell Identity (CI) in case of 4G, the 28-bit UMTS Cell Identity (CID) in case of UMTS or the 16-bit GSM Cell Identity (CID) in case of GSM.",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "additional_info",
            "in": "query",
            "description": "additional properties to return",
            "schema": {
              "type": "string"
            },
            "example": "download_classification"
          },
          {
            "name": "format",
            "in": "query",
            "description": "Desired output format, either 'csv' or 'json', default: json",
            "schema": {
              "type": "string"
            },
            "example": "json"
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "The field for which the data are sorted. Valid fields are: “download_kbit\", \"upload_kbit\", \"time\", \"signal_strength\", \"lte_rsrp\" and \"ping_ms\"",
            "schema": {
              "type": "string"
            },
            "example": "download_kbit"
          },
          {
            "name": "sort_order",
            "in": "query",
            "description": "The sort_by-Parameter specifies the field, the sort_order-Parameter specifies the direction ('asc' or 'desc').\n Per Default, the results are sorted by the time of the test in descending order (i.e. sort_by=time&sort_order=desc).\n If the sort parameters are specified, the value of the cursor is a multiple of the parameter max_results, otherwise it is an arbitrary number.",
            "schema": {
              "type": "string"
            },
            "example": "asc"
          },
          {
            "name": "max_results",
            "in": "query",
            "description": "This is the page size, i.e. maximum number of result items that are returned per page.\n The default value is 100 items per page. The page size limit is 10000 items, i.e. not more than 10000 results can be displayed in a page.",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 10
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "used for pagination if the query returns more than the number of items according to parameter max_results. The value to be used for the display of the next page is given by the previous response in returned parameter next_cursor.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sender",
            "in": "query",
            "description": "Sender ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "Alias '_'. Will be ignored and can be used to prevent caching of the response.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "asn",
            "in": "query",
            "description": "Provider asn",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "land_cover",
            "in": "query",
            "description": "Land cover number",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "implausible",
            "in": "query",
            "description": "Implausible",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "pinned",
            "in": "query",
            "description": "Pinned",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorResponse"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/opentests/search": {
      "get": {
        "tags": [
          "open-test-controller"
        ],
        "summary": "Search for open data tests",
        "description": "Date fields have to be submitted as a number, representing the number of milliseconds that have elapsed since midnight, January 1st, 1970 or in the format “yyyy-MM-dd HH:mm:ss”. The time is given in UTC.\n\nDecimal point (Full Stop “.”) is always used to separate the integer part from the fractional part of a number written in decimal form. This is independent from the local or regional settings.\n\nNumeric fields also allow using the comparators ‘>’ and ‘<’ (meaning ‘=>’ and ‘=<’ respectively). Dates have always to be queried as ranges by using these comparators.\n\nString fields allow using the wildcard ‘*’ for matching any literals and ‘?’ for matching one arbitrary literal.\n\nIt is possible, to begin each filter argument with an exclamation mark (!) to negate the filter. E.g. network_type=!LAN will yield all tests where the network type was not LAN.\n\nThe criteria denoted with [] can be used more than once in a query. Data has to match all criteria. If an array for one criterion is given, the data has to match each entry.\n\nGenerally a query on a parameter value ‘null’ is not possible, except for the parameter loc_accuracy, where the value -1 means ‘null’. Non-‘null’ values are queried with any single or multiple values.",
        "operationId": "search_3",
        "parameters": [
          {
            "name": "download_kbit",
            "in": "query",
            "description": "Download speed in kilobit per second",
            "example": ">6903"
          },
          {
            "name": "upload_kbit",
            "in": "query",
            "description": "Upload speed in kilobit per second.",
            "schema": {
              "type": "string"
            },
            "example": "<4670"
          },
          {
            "name": "ping_ms",
            "in": "query",
            "description": "Median ping (round-trip time) in milliseconds, measured on the server side. In previous versions (before June 3rd 2015) this was the minimum ping measured on the client side.",
            "schema": {
              "type": "string"
            },
            "example": "<16"
          },
          {
            "name": "gkz",
            "in": "query",
            "description": "Community ID (Gemeindekennzahl, see <http://www.bev.gv.at/portal/page?_pageid=713,2601287&_dad=portal&_schema=PORTAL>).",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "gkz_sa",
            "in": "query",
            "description": "Community ID (Gemeindekennzahl, see <http://www.statistik.at/web_de/klassifikationen/regionale_gliederungen/gemeinden/index.html>)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cat_technology",
            "in": "query",
            "description": "Technology category of the network, e.g. “3G”, “4G”, “WLAN”.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "client_version",
            "in": "query",
            "description": "Software version number of the client.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "model",
            "in": "query",
            "description": "Name of the device used.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "network_name",
            "in": "query",
            "description": "Display name of the mobile network.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "network_type",
            "in": "query",
            "description": "Type of the network, e.g. MOBILE, LAN, WLAN.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "platform",
            "in": "query",
            "description": "Platform on which the test has been conducted",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "signal_strength",
            "in": "query",
            "description": "Signal strength (RSSI) in dBm.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lte_rsrp",
            "in": "query",
            "description": "LTE signal strength in dBm.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "open_uuid",
            "in": "query",
            "description": "Open-UUID: Identifies the client that conducted the test. The a new Open-UUID is assigned to the client on a regular basis.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "open_test_uuid",
            "in": "query",
            "description": "The UUID of the test.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "client_uuid",
            "in": "query",
            "description": "The private UUID of a client",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "loop_uuid",
            "in": "query",
            "description": "The loop UUID of a single loop test",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "test_uuid",
            "in": "query",
            "description": "The private UUID of a test",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "long",
            "in": "query",
            "description": "Longitude of the client position.",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "lat",
            "in": "query",
            "description": "Latitude of the client position.",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "radius",
            "in": "query",
            "description": "Radius in meters defining based on lat/long parameters",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "mobile_provider_name",
            "in": "query",
            "description": "mobile operator name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "provider_name",
            "in": "query",
            "description": "Name of the internet service provider.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sim_mcc_mnc",
            "in": "query",
            "description": "Network identification of the SIM provider. The digits of MCC and MNC have the same meaning as described in “network_mcc_mnc”.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sim_country",
            "in": "query",
            "description": "Home country of the SIM card in ISO 3166.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "network_country",
            "in": "query",
            "description": "Country of the network in ISO 3166.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "country_geoip",
            "in": "query",
            "description": "Country according client IP address.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "country_location",
            "in": "query",
            "description": "Country of geo-location.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "user_server_selection",
            "in": "query",
            "description": "Legacy",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "loc_accuracy",
            "in": "query",
            "description": "Estimation of accuracy of client location in meters",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "link_name",
            "in": "query",
            "description": "Austrian road/raiway line identifier, e.g. 'A2'",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "public_ip_as_name",
            "in": "query",
            "description": "Name of the AS of the clients public IP.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "time",
            "in": "query",
            "description": "UTC date and time when test was started.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "radio_band",
            "in": "query",
            "description": "Radio band used when conducting the test.",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "cell_area_code",
            "in": "query",
            "description": "Number describing the coarse location of a cell. E.g. the Tracking Area Code (TAC) in case of 4G or the Location Area Code (LAC) in case of 2G or 3G",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "cell_location_id",
            "in": "query",
            "description": "Number identifying the location of a cell. E.g. the 28-bit Cell Identity (CI) in case of 4G, the 28-bit UMTS Cell Identity (CID) in case of UMTS or the 16-bit GSM Cell Identity (CID) in case of GSM.",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "additional_info",
            "in": "query",
            "description": "additional properties to return",
            "schema": {
              "type": "string"
            },
            "example": "download_classification"
          },
          {
            "name": "format",
            "in": "query",
            "description": "Desired output format, either 'csv' or 'json', default: json",
            "schema": {
              "type": "string"
            },
            "example": "json"
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "The field for which the data are sorted. Valid fields are: “download_kbit\", \"upload_kbit\", \"time\", \"signal_strength\", \"lte_rsrp\" and \"ping_ms\"",
            "schema": {
              "type": "string"
            },
            "example": "download_kbit"
          },
          {
            "name": "sort_order",
            "in": "query",
            "description": "The sort_by-Parameter specifies the field, the sort_order-Parameter specifies the direction ('asc' or 'desc').\n Per Default, the results are sorted by the time of the test in descending order (i.e. sort_by=time&sort_order=desc).\n If the sort parameters are specified, the value of the cursor is a multiple of the parameter max_results, otherwise it is an arbitrary number.",
            "schema": {
              "type": "string"
            },
            "example": "asc"
          },
          {
            "name": "max_results",
            "in": "query",
            "description": "This is the page size, i.e. maximum number of result items that are returned per page.\n The default value is 100 items per page. The page size limit is 10000 items, i.e. not more than 10000 results can be displayed in a page.",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 10
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "used for pagination if the query returns more than the number of items according to parameter max_results. The value to be used for the display of the next page is given by the previous response in returned parameter next_cursor.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sender",
            "in": "query",
            "description": "Sender ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "Alias '_'. Will be ignored and can be used to prevent caching of the response.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "asn",
            "in": "query",
            "description": "Provider asn",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "land_cover",
            "in": "query",
            "description": "Land cover number",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "implausible",
            "in": "query",
            "description": "Implausible",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "pinned",
            "in": "query",
            "description": "Pinned",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorResponse"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "open-test-controller"
        ],
        "summary": "Search for open data tests",
        "description": "Date fields have to be submitted as a number, representing the number of milliseconds that have elapsed since midnight, January 1st, 1970 or in the format “yyyy-MM-dd HH:mm:ss”. The time is given in UTC.\n\nDecimal point (Full Stop “.”) is always used to separate the integer part from the fractional part of a number written in decimal form. This is independent from the local or regional settings.\n\nNumeric fields also allow using the comparators ‘>’ and ‘<’ (meaning ‘=>’ and ‘=<’ respectively). Dates have always to be queried as ranges by using these comparators.\n\nString fields allow using the wildcard ‘*’ for matching any literals and ‘?’ for matching one arbitrary literal.\n\nIt is possible, to begin each filter argument with an exclamation mark (!) to negate the filter. E.g. network_type=!LAN will yield all tests where the network type was not LAN.\n\nThe criteria denoted with [] can be used more than once in a query. Data has to match all criteria. If an array for one criterion is given, the data has to match each entry.\n\nGenerally a query on a parameter value ‘null’ is not possible, except for the parameter loc_accuracy, where the value -1 means ‘null’. Non-‘null’ values are queried with any single or multiple values.",
        "operationId": "search_1",
        "parameters": [
          {
            "name": "download_kbit",
            "in": "query",
            "description": "Download speed in kilobit per second",
            "schema": {
              "type": "string"
            },
            "example": ">6903"
          },
          {
            "name": "upload_kbit",
            "in": "query",
            "description": "Upload speed in kilobit per second.",
            "schema": {
              "type": "string"
            },
            "example": "<4670"
          },
          {
            "name": "ping_ms",
            "in": "query",
            "description": "Median ping (round-trip time) in milliseconds, measured on the server side. In previous versions (before June 3rd 2015) this was the minimum ping measured on the client side.",
            "schema": {
              "type": "string"
            },
            "example": "<16"
          },
          {
            "name": "gkz",
            "in": "query",
            "description": "Community ID (Gemeindekennzahl, see <http://www.bev.gv.at/portal/page?_pageid=713,2601287&_dad=portal&_schema=PORTAL>).",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "gkz_sa",
            "in": "query",
            "description": "Community ID (Gemeindekennzahl, see <http://www.statistik.at/web_de/klassifikationen/regionale_gliederungen/gemeinden/index.html>)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cat_technology",
            "in": "query",
            "description": "Technology category of the network, e.g. “3G”, “4G”, “WLAN”.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "client_version",
            "in": "query",
            "description": "Software version number of the client.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "model",
            "in": "query",
            "description": "Name of the device used.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "network_name",
            "in": "query",
            "description": "Display name of the mobile network.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "network_type",
            "in": "query",
            "description": "Type of the network, e.g. MOBILE, LAN, WLAN.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "platform",
            "in": "query",
            "description": "Platform on which the test has been conducted",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "signal_strength",
            "in": "query",
            "description": "Signal strength (RSSI) in dBm.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lte_rsrp",
            "in": "query",
            "description": "LTE signal strength in dBm.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "open_uuid",
            "in": "query",
            "description": "Open-UUID: Identifies the client that conducted the test. The a new Open-UUID is assigned to the client on a regular basis.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "open_test_uuid",
            "in": "query",
            "description": "The UUID of the test.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "client_uuid",
            "in": "query",
            "description": "The private UUID of a client",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "loop_uuid",
            "in": "query",
            "description": "The loop UUID of a single loop test",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "test_uuid",
            "in": "query",
            "description": "The private UUID of a test",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "long",
            "in": "query",
            "description": "Longitude of the client position.",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "lat",
            "in": "query",
            "description": "Latitude of the client position.",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "radius",
            "in": "query",
            "description": "Radius in meters defining based on lat/long parameters",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "mobile_provider_name",
            "in": "query",
            "description": "mobile operator name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "provider_name",
            "in": "query",
            "description": "Name of the internet service provider.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sim_mcc_mnc",
            "in": "query",
            "description": "Network identification of the SIM provider. The digits of MCC and MNC have the same meaning as described in “network_mcc_mnc”.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sim_country",
            "in": "query",
            "description": "Home country of the SIM card in ISO 3166.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "network_country",
            "in": "query",
            "description": "Country of the network in ISO 3166.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "country_geoip",
            "in": "query",
            "description": "Country according client IP address.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "country_location",
            "in": "query",
            "description": "Country of geo-location.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "user_server_selection",
            "in": "query",
            "description": "Legacy",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "loc_accuracy",
            "in": "query",
            "description": "Estimation of accuracy of client location in meters",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "link_name",
            "in": "query",
            "description": "Austrian road/raiway line identifier, e.g. 'A2'",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "public_ip_as_name",
            "in": "query",
            "description": "Name of the AS of the clients public IP.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "time",
            "in": "query",
            "description": "UTC date and time when test was started.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "radio_band",
            "in": "query",
            "description": "Radio band used when conducting the test.",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "cell_area_code",
            "in": "query",
            "description": "Number describing the coarse location of a cell. E.g. the Tracking Area Code (TAC) in case of 4G or the Location Area Code (LAC) in case of 2G or 3G",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "cell_location_id",
            "in": "query",
            "description": "Number identifying the location of a cell. E.g. the 28-bit Cell Identity (CI) in case of 4G, the 28-bit UMTS Cell Identity (CID) in case of UMTS or the 16-bit GSM Cell Identity (CID) in case of GSM.",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "additional_info",
            "in": "query",
            "description": "additional properties to return",
            "schema": {
              "type": "string"
            },
            "example": "download_classification"
          },
          {
            "name": "format",
            "in": "query",
            "description": "Desired output format, either 'csv' or 'json', default: json",
            "schema": {
              "type": "string"
            },
            "example": "json"
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "The field for which the data are sorted. Valid fields are: “download_kbit\", \"upload_kbit\", \"time\", \"signal_strength\", \"lte_rsrp\" and \"ping_ms\"",
            "schema": {
              "type": "string"
            },
            "example": "download_kbit"
          },
          {
            "name": "sort_order",
            "in": "query",
            "description": "The sort_by-Parameter specifies the field, the sort_order-Parameter specifies the direction ('asc' or 'desc').\n Per Default, the results are sorted by the time of the test in descending order (i.e. sort_by=time&sort_order=desc).\n If the sort parameters are specified, the value of the cursor is a multiple of the parameter max_results, otherwise it is an arbitrary number.",
            "schema": {
              "type": "string"
            },
            "example": "asc"
          },
          {
            "name": "max_results",
            "in": "query",
            "description": "This is the page size, i.e. maximum number of result items that are returned per page.\n The default value is 100 items per page. The page size limit is 10000 items, i.e. not more than 10000 results can be displayed in a page.",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 10
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "used for pagination if the query returns more than the number of items according to parameter max_results. The value to be used for the display of the next page is given by the previous response in returned parameter next_cursor.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sender",
            "in": "query",
            "description": "Sender ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "Alias '_'. Will be ignored and can be used to prevent caching of the response.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "asn",
            "in": "query",
            "description": "Provider asn",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "land_cover",
            "in": "query",
            "description": "Land cover number",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "implausible",
            "in": "query",
            "description": "Implausible",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "pinned",
            "in": "query",
            "description": "Pinned",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorResponse"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/export/pdf": {
      "post": {
        "tags": [
          "pdf-export-controller"
        ],
        "summary": "Export open data as PDF",
        "operationId": "exportPdf",
        "parameters": [
          {
            "name": "open_test_uuid",
            "in": "query",
            "description": "The UUID of the test.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "loop_uuid",
            "in": "query",
            "description": "The loop UUID of a single loop test",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accept",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorResponse"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "default response",
            "content": {
              "application/pdf": {}
            }
          }
        }
      }
    },
    "/export/pdf/{lang}": {
      "post": {
        "tags": [
          "pdf-export-controller"
        ],
        "summary": "Export open data as PDF",
        "operationId": "exportPdf_1",
        "parameters": [
          {
            "name": "open_test_uuid",
            "in": "query",
            "description": "The UUID of the test.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "loop_uuid",
            "in": "query",
            "description": "The loop UUID of a single loop test",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lang",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accept",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorResponse"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "default response",
            "content": {
              "application/pdf": {}
            }
          }
        }
      }
    },
    "/{lang}/{open_test_uuid}/{size}.png": {
      "get": {
        "tags": [
          "open-test-controller"
        ],
        "summary": "Export png",
        "description": "Export test result as png banner",
        "operationId": "export-png",
        "parameters": [
          {
            "name": "lang",
            "in": "path",
            "description": "Mandatory. The language that should be exported.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "en"
          },
          {
            "name": "open_test_uuid",
            "in": "path",
            "description": "Mandatory. The open-test-uuid of the test.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "Oc1326b7c-4141-42cb-b8c5-922c356a6cee"
          },
          {
            "name": "size",
            "in": "path",
            "description": "Mandatory. Either 'forumlarge' or 'forumsmall' or 'thumbnail ",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "thumbnail"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorResponse"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/version": {
      "get": {
        "tags": [
          "application-version-controller"
        ],
        "summary": "Get version of application",
        "operationId": "getApplicationVersion",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationVersionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorResponse"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/opentests/statistics": {
      "get": {
        "tags": [
          "open-test-controller"
        ],
        "summary": "Open tests statistics",
        "description": "Date fields have to be submitted as a number, representing the number of milliseconds that have elapsed since midnight, January 1st, 1970 or in the format “yyyy-MM-dd HH:mm:ss”. The time is given in UTC.\n\nDecimal point (Full Stop “.”) is always used to separate the integer part from the fractional part of a number written in decimal form. This is independent from the local or regional settings.\n\nNumeric fields also allow using the comparators ‘>’ and ‘<’ (meaning ‘=>’ and ‘=<’ respectively). Dates have always to be queried as ranges by using these comparators.\n\nString fields allow using the wildcard ‘*’ for matching any literals and ‘?’ for matching one arbitrary literal.\n\nIt is possible, to begin each filter argument with an exclamation mark (!) to negate the filter. E.g. network_type=!LAN will yield all tests where the network type was not LAN.\n\nThe criteria denoted with [] can be used more than once in a query. Data has to match all criteria. If an array for one criterion is given, the data has to match each entry.\n\nGenerally a query on a parameter value ‘null’ is not possible, except for the parameter loc_accuracy, where the value -1 means ‘null’. Non-‘null’ values are queried with any single or multiple values.",
        "operationId": "getStatistics",
        "parameters": [
          {
            "name": "download_kbit",
            "in": "query",
            "description": "Download speed in kilobit per second",
            "example": ">6903"
          },
          {
            "name": "upload_kbit",
            "in": "query",
            "description": "Upload speed in kilobit per second.",
            "schema": {
              "type": "string"
            },
            "example": "<4670"
          },
          {
            "name": "ping_ms",
            "in": "query",
            "description": "Median ping (round-trip time) in milliseconds, measured on the server side. In previous versions (before June 3rd 2015) this was the minimum ping measured on the client side.",
            "schema": {
              "type": "string"
            },
            "example": "<16"
          },
          {
            "name": "gkz",
            "in": "query",
            "description": "Community ID (Gemeindekennzahl, see <http://www.bev.gv.at/portal/page?_pageid=713,2601287&_dad=portal&_schema=PORTAL>).",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "gkz_sa",
            "in": "query",
            "description": "Community ID (Gemeindekennzahl, see <http://www.statistik.at/web_de/klassifikationen/regionale_gliederungen/gemeinden/index.html>)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cat_technology",
            "in": "query",
            "description": "Technology category of the network, e.g. “3G”, “4G”, “WLAN”.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "client_version",
            "in": "query",
            "description": "Software version number of the client.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "model",
            "in": "query",
            "description": "Name of the device used.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "network_name",
            "in": "query",
            "description": "Display name of the mobile network.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "network_type",
            "in": "query",
            "description": "Type of the network, e.g. MOBILE, LAN, WLAN.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "platform",
            "in": "query",
            "description": "Platform on which the test has been conducted",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "signal_strength",
            "in": "query",
            "description": "Signal strength (RSSI) in dBm.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lte_rsrp",
            "in": "query",
            "description": "LTE signal strength in dBm.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "open_uuid",
            "in": "query",
            "description": "Open-UUID: Identifies the client that conducted the test. The a new Open-UUID is assigned to the client on a regular basis.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "open_test_uuid",
            "in": "query",
            "description": "The UUID of the test.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "client_uuid",
            "in": "query",
            "description": "The private UUID of a client",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "loop_uuid",
            "in": "query",
            "description": "The loop UUID of a single loop test",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "test_uuid",
            "in": "query",
            "description": "The private UUID of a test",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "long",
            "in": "query",
            "description": "Longitude of the client position.",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "lat",
            "in": "query",
            "description": "Latitude of the client position.",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "radius",
            "in": "query",
            "description": "Radius in meters defining based on lat/long parameters",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "mobile_provider_name",
            "in": "query",
            "description": "mobile operator name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "provider_name",
            "in": "query",
            "description": "Name of the internet service provider.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sim_mcc_mnc",
            "in": "query",
            "description": "Network identification of the SIM provider. The digits of MCC and MNC have the same meaning as described in “network_mcc_mnc”.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sim_country",
            "in": "query",
            "description": "Home country of the SIM card in ISO 3166.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "network_country",
            "in": "query",
            "description": "Country of the network in ISO 3166.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "country_geoip",
            "in": "query",
            "description": "Country according client IP address.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "country_location",
            "in": "query",
            "description": "Country of geo-location.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "user_server_selection",
            "in": "query",
            "description": "Legacy",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "loc_accuracy",
            "in": "query",
            "description": "Estimation of accuracy of client location in meters",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "link_name",
            "in": "query",
            "description": "Austrian road/raiway line identifier, e.g. 'A2'",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "public_ip_as_name",
            "in": "query",
            "description": "Name of the AS of the clients public IP.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "time",
            "in": "query",
            "description": "UTC date and time when test was started.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "radio_band",
            "in": "query",
            "description": "Radio band used when conducting the test.",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "cell_area_code",
            "in": "query",
            "description": "Number describing the coarse location of a cell. E.g. the Tracking Area Code (TAC) in case of 4G or the Location Area Code (LAC) in case of 2G or 3G",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "cell_location_id",
            "in": "query",
            "description": "Number identifying the location of a cell. E.g. the 28-bit Cell Identity (CI) in case of 4G, the 28-bit UMTS Cell Identity (CID) in case of UMTS or the 16-bit GSM Cell Identity (CID) in case of GSM.",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "additional_info",
            "in": "query",
            "description": "additional properties to return",
            "schema": {
              "type": "string"
            },
            "example": "download_classification"
          },
          {
            "name": "format",
            "in": "query",
            "description": "Desired output format, either 'csv' or 'json', default: json",
            "schema": {
              "type": "string"
            },
            "example": "json"
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "The field for which the data are sorted. Valid fields are: “download_kbit\", \"upload_kbit\", \"time\", \"signal_strength\", \"lte_rsrp\" and \"ping_ms\"",
            "schema": {
              "type": "string"
            },
            "example": "download_kbit"
          },
          {
            "name": "sort_order",
            "in": "query",
            "description": "The sort_by-Parameter specifies the field, the sort_order-Parameter specifies the direction ('asc' or 'desc').\n Per Default, the results are sorted by the time of the test in descending order (i.e. sort_by=time&sort_order=desc).\n If the sort parameters are specified, the value of the cursor is a multiple of the parameter max_results, otherwise it is an arbitrary number.",
            "schema": {
              "type": "string"
            },
            "example": "asc"
          },
          {
            "name": "max_results",
            "in": "query",
            "description": "This is the page size, i.e. maximum number of result items that are returned per page.\n The default value is 100 items per page. The page size limit is 10000 items, i.e. not more than 10000 results can be displayed in a page.",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 10
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "used for pagination if the query returns more than the number of items according to parameter max_results. The value to be used for the display of the next page is given by the previous response in returned parameter next_cursor.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sender",
            "in": "query",
            "description": "Sender ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "Alias '_'. Will be ignored and can be used to prevent caching of the response.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "asn",
            "in": "query",
            "description": "Provider asn",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "land_cover",
            "in": "query",
            "description": "Land cover number",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "implausible",
            "in": "query",
            "description": "Implausible",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "pinned",
            "in": "query",
            "description": "Pinned",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "integer",
                    "format": "int64"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorResponse"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/opentests/intraday": {
      "get": {
        "tags": [
          "open-test-controller"
        ],
        "summary": "Open tests intraday",
        "description": "Date fields have to be submitted as a number, representing the number of milliseconds that have elapsed since midnight, January 1st, 1970 or in the format “yyyy-MM-dd HH:mm:ss”. The time is given in UTC.\n\nDecimal point (Full Stop “.”) is always used to separate the integer part from the fractional part of a number written in decimal form. This is independent from the local or regional settings.\n\nNumeric fields also allow using the comparators ‘>’ and ‘<’ (meaning ‘=>’ and ‘=<’ respectively). Dates have always to be queried as ranges by using these comparators.\n\nString fields allow using the wildcard ‘*’ for matching any literals and ‘?’ for matching one arbitrary literal.\n\nIt is possible, to begin each filter argument with an exclamation mark (!) to negate the filter. E.g. network_type=!LAN will yield all tests where the network type was not LAN.\n\nThe criteria denoted with [] can be used more than once in a query. Data has to match all criteria. If an array for one criterion is given, the data has to match each entry.\n\nGenerally a query on a parameter value ‘null’ is not possible, except for the parameter loc_accuracy, where the value -1 means ‘null’. Non-‘null’ values are queried with any single or multiple values.",
        "operationId": "getIntraday",
        "parameters": [
          {
            "name": "download_kbit",
            "in": "query",
            "description": "Download speed in kilobit per second",
            "example": ">6903"
          },
          {
            "name": "upload_kbit",
            "in": "query",
            "description": "Upload speed in kilobit per second.",
            "schema": {
              "type": "string"
            },
            "example": "<4670"
          },
          {
            "name": "ping_ms",
            "in": "query",
            "description": "Median ping (round-trip time) in milliseconds, measured on the server side. In previous versions (before June 3rd 2015) this was the minimum ping measured on the client side.",
            "schema": {
              "type": "string"
            },
            "example": "<16"
          },
          {
            "name": "gkz",
            "in": "query",
            "description": "Community ID (Gemeindekennzahl, see <http://www.bev.gv.at/portal/page?_pageid=713,2601287&_dad=portal&_schema=PORTAL>).",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "gkz_sa",
            "in": "query",
            "description": "Community ID (Gemeindekennzahl, see <http://www.statistik.at/web_de/klassifikationen/regionale_gliederungen/gemeinden/index.html>)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cat_technology",
            "in": "query",
            "description": "Technology category of the network, e.g. “3G”, “4G”, “WLAN”.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "client_version",
            "in": "query",
            "description": "Software version number of the client.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "model",
            "in": "query",
            "description": "Name of the device used.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "network_name",
            "in": "query",
            "description": "Display name of the mobile network.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "network_type",
            "in": "query",
            "description": "Type of the network, e.g. MOBILE, LAN, WLAN.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "platform",
            "in": "query",
            "description": "Platform on which the test has been conducted",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "signal_strength",
            "in": "query",
            "description": "Signal strength (RSSI) in dBm.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lte_rsrp",
            "in": "query",
            "description": "LTE signal strength in dBm.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "open_uuid",
            "in": "query",
            "description": "Open-UUID: Identifies the client that conducted the test. The a new Open-UUID is assigned to the client on a regular basis.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "open_test_uuid",
            "in": "query",
            "description": "The UUID of the test.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "client_uuid",
            "in": "query",
            "description": "The private UUID of a client",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "loop_uuid",
            "in": "query",
            "description": "The loop UUID of a single loop test",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "test_uuid",
            "in": "query",
            "description": "The private UUID of a test",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "long",
            "in": "query",
            "description": "Longitude of the client position.",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "lat",
            "in": "query",
            "description": "Latitude of the client position.",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "radius",
            "in": "query",
            "description": "Radius in meters defining based on lat/long parameters",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "mobile_provider_name",
            "in": "query",
            "description": "mobile operator name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "provider_name",
            "in": "query",
            "description": "Name of the internet service provider.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sim_mcc_mnc",
            "in": "query",
            "description": "Network identification of the SIM provider. The digits of MCC and MNC have the same meaning as described in “network_mcc_mnc”.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sim_country",
            "in": "query",
            "description": "Home country of the SIM card in ISO 3166.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "network_country",
            "in": "query",
            "description": "Country of the network in ISO 3166.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "country_geoip",
            "in": "query",
            "description": "Country according client IP address.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "country_location",
            "in": "query",
            "description": "Country of geo-location.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "user_server_selection",
            "in": "query",
            "description": "Legacy",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "loc_accuracy",
            "in": "query",
            "description": "Estimation of accuracy of client location in meters",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "link_name",
            "in": "query",
            "description": "Austrian road/raiway line identifier, e.g. 'A2'",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "public_ip_as_name",
            "in": "query",
            "description": "Name of the AS of the clients public IP.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "time",
            "in": "query",
            "description": "UTC date and time when test was started.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "radio_band",
            "in": "query",
            "description": "Radio band used when conducting the test.",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "cell_area_code",
            "in": "query",
            "description": "Number describing the coarse location of a cell. E.g. the Tracking Area Code (TAC) in case of 4G or the Location Area Code (LAC) in case of 2G or 3G",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "cell_location_id",
            "in": "query",
            "description": "Number identifying the location of a cell. E.g. the 28-bit Cell Identity (CI) in case of 4G, the 28-bit UMTS Cell Identity (CID) in case of UMTS or the 16-bit GSM Cell Identity (CID) in case of GSM.",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "additional_info",
            "in": "query",
            "description": "additional properties to return",
            "schema": {
              "type": "string"
            },
            "example": "download_classification"
          },
          {
            "name": "format",
            "in": "query",
            "description": "Desired output format, either 'csv' or 'json', default: json",
            "schema": {
              "type": "string"
            },
            "example": "json"
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "The field for which the data are sorted. Valid fields are: “download_kbit\", \"upload_kbit\", \"time\", \"signal_strength\", \"lte_rsrp\" and \"ping_ms\"",
            "schema": {
              "type": "string"
            },
            "example": "download_kbit"
          },
          {
            "name": "sort_order",
            "in": "query",
            "description": "The sort_by-Parameter specifies the field, the sort_order-Parameter specifies the direction ('asc' or 'desc').\n Per Default, the results are sorted by the time of the test in descending order (i.e. sort_by=time&sort_order=desc).\n If the sort parameters are specified, the value of the cursor is a multiple of the parameter max_results, otherwise it is an arbitrary number.",
            "schema": {
              "type": "string"
            },
            "example": "asc"
          },
          {
            "name": "max_results",
            "in": "query",
            "description": "This is the page size, i.e. maximum number of result items that are returned per page.\n The default value is 100 items per page. The page size limit is 10000 items, i.e. not more than 10000 results can be displayed in a page.",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 10
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "used for pagination if the query returns more than the number of items according to parameter max_results. The value to be used for the display of the next page is given by the previous response in returned parameter next_cursor.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sender",
            "in": "query",
            "description": "Sender ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "Alias '_'. Will be ignored and can be used to prevent caching of the response.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "asn",
            "in": "query",
            "description": "Provider asn",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "land_cover",
            "in": "query",
            "description": "Land cover number",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "implausible",
            "in": "query",
            "description": "Implausible",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "pinned",
            "in": "query",
            "description": "Pinned",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/HourlyStatisticResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorResponse"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/opentests/histogram": {
      "get": {
        "tags": [
          "open-test-controller"
        ],
        "summary": "Open tests histogram",
        "description": "Date fields have to be submitted as a number, representing the number of milliseconds that have elapsed since midnight, January 1st, 1970 or in the format “yyyy-MM-dd HH:mm:ss”. The time is given in UTC.\n\nDecimal point (Full Stop “.”) is always used to separate the integer part from the fractional part of a number written in decimal form. This is independent from the local or regional settings.\n\nNumeric fields also allow using the comparators ‘>’ and ‘<’ (meaning ‘=>’ and ‘=<’ respectively). Dates have always to be queried as ranges by using these comparators.\n\nString fields allow using the wildcard ‘*’ for matching any literals and ‘?’ for matching one arbitrary literal.\n\nIt is possible, to begin each filter argument with an exclamation mark (!) to negate the filter. E.g. network_type=!LAN will yield all tests where the network type was not LAN.\n\nThe criteria denoted with [] can be used more than once in a query. Data has to match all criteria. If an array for one criterion is given, the data has to match each entry.\n\nGenerally a query on a parameter value ‘null’ is not possible, except for the parameter loc_accuracy, where the value -1 means ‘null’. Non-‘null’ values are queried with any single or multiple values.",
        "operationId": "getHistogram",
        "parameters": [
          {
            "name": "download_kbit",
            "in": "query",
            "description": "Download speed in kilobit per second",
            "example": ">6903"
          },
          {
            "name": "upload_kbit",
            "in": "query",
            "description": "Upload speed in kilobit per second.",
            "schema": {
              "type": "string"
            },
            "example": "<4670"
          },
          {
            "name": "ping_ms",
            "in": "query",
            "description": "Median ping (round-trip time) in milliseconds, measured on the server side. In previous versions (before June 3rd 2015) this was the minimum ping measured on the client side.",
            "schema": {
              "type": "string"
            },
            "example": "<16"
          },
          {
            "name": "gkz",
            "in": "query",
            "description": "Community ID (Gemeindekennzahl, see <http://www.bev.gv.at/portal/page?_pageid=713,2601287&_dad=portal&_schema=PORTAL>).",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "gkz_sa",
            "in": "query",
            "description": "Community ID (Gemeindekennzahl, see <http://www.statistik.at/web_de/klassifikationen/regionale_gliederungen/gemeinden/index.html>)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cat_technology",
            "in": "query",
            "description": "Technology category of the network, e.g. “3G”, “4G”, “WLAN”.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "client_version",
            "in": "query",
            "description": "Software version number of the client.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "model",
            "in": "query",
            "description": "Name of the device used.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "network_name",
            "in": "query",
            "description": "Display name of the mobile network.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "network_type",
            "in": "query",
            "description": "Type of the network, e.g. MOBILE, LAN, WLAN.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "platform",
            "in": "query",
            "description": "Platform on which the test has been conducted",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "signal_strength",
            "in": "query",
            "description": "Signal strength (RSSI) in dBm.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lte_rsrp",
            "in": "query",
            "description": "LTE signal strength in dBm.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "open_uuid",
            "in": "query",
            "description": "Open-UUID: Identifies the client that conducted the test. The a new Open-UUID is assigned to the client on a regular basis.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "open_test_uuid",
            "in": "query",
            "description": "The UUID of the test.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "client_uuid",
            "in": "query",
            "description": "The private UUID of a client",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "loop_uuid",
            "in": "query",
            "description": "The loop UUID of a single loop test",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "test_uuid",
            "in": "query",
            "description": "The private UUID of a test",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "long",
            "in": "query",
            "description": "Longitude of the client position.",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "lat",
            "in": "query",
            "description": "Latitude of the client position.",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "radius",
            "in": "query",
            "description": "Radius in meters defining based on lat/long parameters",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "mobile_provider_name",
            "in": "query",
            "description": "mobile operator name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "provider_name",
            "in": "query",
            "description": "Name of the internet service provider.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sim_mcc_mnc",
            "in": "query",
            "description": "Network identification of the SIM provider. The digits of MCC and MNC have the same meaning as described in “network_mcc_mnc”.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sim_country",
            "in": "query",
            "description": "Home country of the SIM card in ISO 3166.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "network_country",
            "in": "query",
            "description": "Country of the network in ISO 3166.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "country_geoip",
            "in": "query",
            "description": "Country according client IP address.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "country_location",
            "in": "query",
            "description": "Country of geo-location.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "user_server_selection",
            "in": "query",
            "description": "Legacy",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "loc_accuracy",
            "in": "query",
            "description": "Estimation of accuracy of client location in meters",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "link_name",
            "in": "query",
            "description": "Austrian road/raiway line identifier, e.g. 'A2'",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "public_ip_as_name",
            "in": "query",
            "description": "Name of the AS of the clients public IP.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "time",
            "in": "query",
            "description": "UTC date and time when test was started.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "radio_band",
            "in": "query",
            "description": "Radio band used when conducting the test.",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "cell_area_code",
            "in": "query",
            "description": "Number describing the coarse location of a cell. E.g. the Tracking Area Code (TAC) in case of 4G or the Location Area Code (LAC) in case of 2G or 3G",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "cell_location_id",
            "in": "query",
            "description": "Number identifying the location of a cell. E.g. the 28-bit Cell Identity (CI) in case of 4G, the 28-bit UMTS Cell Identity (CID) in case of UMTS or the 16-bit GSM Cell Identity (CID) in case of GSM.",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "additional_info",
            "in": "query",
            "description": "additional properties to return",
            "schema": {
              "type": "string"
            },
            "example": "download_classification"
          },
          {
            "name": "format",
            "in": "query",
            "description": "Desired output format, either 'csv' or 'json', default: json",
            "schema": {
              "type": "string"
            },
            "example": "json"
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "The field for which the data are sorted. Valid fields are: “download_kbit\", \"upload_kbit\", \"time\", \"signal_strength\", \"lte_rsrp\" and \"ping_ms\"",
            "schema": {
              "type": "string"
            },
            "example": "download_kbit"
          },
          {
            "name": "sort_order",
            "in": "query",
            "description": "The sort_by-Parameter specifies the field, the sort_order-Parameter specifies the direction ('asc' or 'desc').\n Per Default, the results are sorted by the time of the test in descending order (i.e. sort_by=time&sort_order=desc).\n If the sort parameters are specified, the value of the cursor is a multiple of the parameter max_results, otherwise it is an arbitrary number.",
            "schema": {
              "type": "string"
            },
            "example": "asc"
          },
          {
            "name": "max_results",
            "in": "query",
            "description": "This is the page size, i.e. maximum number of result items that are returned per page.\n The default value is 100 items per page. The page size limit is 10000 items, i.e. not more than 10000 results can be displayed in a page.",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 10
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "used for pagination if the query returns more than the number of items according to parameter max_results. The value to be used for the display of the next page is given by the previous response in returned parameter next_cursor.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sender",
            "in": "query",
            "description": "Sender ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "Alias '_'. Will be ignored and can be used to prevent caching of the response.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "asn",
            "in": "query",
            "description": "Provider asn",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "land_cover",
            "in": "query",
            "description": "Land cover number",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "implausible",
            "in": "query",
            "description": "Implausible",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "pinned",
            "in": "query",
            "description": "Pinned",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HistogramResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorResponse"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/opentests/choices": {
      "get": {
        "tags": [
          "open-test-controller"
        ],
        "summary": "Choices",
        "description": "Date fields have to be submitted as a number, representing the number of milliseconds that have elapsed since midnight, January 1st, 1970 or in the format “yyyy-MM-dd HH:mm:ss”. The time is given in UTC.\n\nDecimal point (Full Stop “.”) is always used to separate the integer part from the fractional part of a number written in decimal form. This is independent from the local or regional settings.\n\nNumeric fields also allow using the comparators ‘>’ and ‘<’ (meaning ‘=>’ and ‘=<’ respectively). Dates have always to be queried as ranges by using these comparators.\n\nString fields allow using the wildcard ‘*’ for matching any literals and ‘?’ for matching one arbitrary literal.\n\nIt is possible, to begin each filter argument with an exclamation mark (!) to negate the filter. E.g. network_type=!LAN will yield all tests where the network type was not LAN.\n\nThe criteria denoted with [] can be used more than once in a query. Data has to match all criteria. If an array for one criterion is given, the data has to match each entry.\n\nGenerally a query on a parameter value ‘null’ is not possible, except for the parameter loc_accuracy, where the value -1 means ‘null’. Non-‘null’ values are queried with any single or multiple values.",
        "operationId": "choices",
        "parameters": [
          {
            "name": "download_kbit",
            "in": "query",
            "description": "Download speed in kilobit per second",
            "example": ">6903"
          },
          {
            "name": "upload_kbit",
            "in": "query",
            "description": "Upload speed in kilobit per second.",
            "schema": {
              "type": "string"
            },
            "example": "<4670"
          },
          {
            "name": "ping_ms",
            "in": "query",
            "description": "Median ping (round-trip time) in milliseconds, measured on the server side. In previous versions (before June 3rd 2015) this was the minimum ping measured on the client side.",
            "schema": {
              "type": "string"
            },
            "example": "<16"
          },
          {
            "name": "gkz",
            "in": "query",
            "description": "Community ID (Gemeindekennzahl, see <http://www.bev.gv.at/portal/page?_pageid=713,2601287&_dad=portal&_schema=PORTAL>).",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "gkz_sa",
            "in": "query",
            "description": "Community ID (Gemeindekennzahl, see <http://www.statistik.at/web_de/klassifikationen/regionale_gliederungen/gemeinden/index.html>)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cat_technology",
            "in": "query",
            "description": "Technology category of the network, e.g. “3G”, “4G”, “WLAN”.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "client_version",
            "in": "query",
            "description": "Software version number of the client.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "model",
            "in": "query",
            "description": "Name of the device used.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "network_name",
            "in": "query",
            "description": "Display name of the mobile network.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "network_type",
            "in": "query",
            "description": "Type of the network, e.g. MOBILE, LAN, WLAN.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "platform",
            "in": "query",
            "description": "Platform on which the test has been conducted",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "signal_strength",
            "in": "query",
            "description": "Signal strength (RSSI) in dBm.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lte_rsrp",
            "in": "query",
            "description": "LTE signal strength in dBm.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "open_uuid",
            "in": "query",
            "description": "Open-UUID: Identifies the client that conducted the test. The a new Open-UUID is assigned to the client on a regular basis.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "open_test_uuid",
            "in": "query",
            "description": "The UUID of the test.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "client_uuid",
            "in": "query",
            "description": "The private UUID of a client",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "loop_uuid",
            "in": "query",
            "description": "The loop UUID of a single loop test",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "test_uuid",
            "in": "query",
            "description": "The private UUID of a test",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "long",
            "in": "query",
            "description": "Longitude of the client position.",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "lat",
            "in": "query",
            "description": "Latitude of the client position.",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "radius",
            "in": "query",
            "description": "Radius in meters defining based on lat/long parameters",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "mobile_provider_name",
            "in": "query",
            "description": "mobile operator name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "provider_name",
            "in": "query",
            "description": "Name of the internet service provider.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sim_mcc_mnc",
            "in": "query",
            "description": "Network identification of the SIM provider. The digits of MCC and MNC have the same meaning as described in “network_mcc_mnc”.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sim_country",
            "in": "query",
            "description": "Home country of the SIM card in ISO 3166.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "network_country",
            "in": "query",
            "description": "Country of the network in ISO 3166.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "country_geoip",
            "in": "query",
            "description": "Country according client IP address.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "country_location",
            "in": "query",
            "description": "Country of geo-location.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "user_server_selection",
            "in": "query",
            "description": "Legacy",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "loc_accuracy",
            "in": "query",
            "description": "Estimation of accuracy of client location in meters",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "link_name",
            "in": "query",
            "description": "Austrian road/raiway line identifier, e.g. 'A2'",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "public_ip_as_name",
            "in": "query",
            "description": "Name of the AS of the clients public IP.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "time",
            "in": "query",
            "description": "UTC date and time when test was started.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "radio_band",
            "in": "query",
            "description": "Radio band used when conducting the test.",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "cell_area_code",
            "in": "query",
            "description": "Number describing the coarse location of a cell. E.g. the Tracking Area Code (TAC) in case of 4G or the Location Area Code (LAC) in case of 2G or 3G",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "cell_location_id",
            "in": "query",
            "description": "Number identifying the location of a cell. E.g. the 28-bit Cell Identity (CI) in case of 4G, the 28-bit UMTS Cell Identity (CID) in case of UMTS or the 16-bit GSM Cell Identity (CID) in case of GSM.",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "additional_info",
            "in": "query",
            "description": "additional properties to return",
            "schema": {
              "type": "string"
            },
            "example": "download_classification"
          },
          {
            "name": "format",
            "in": "query",
            "description": "Desired output format, either 'csv' or 'json', default: json",
            "schema": {
              "type": "string"
            },
            "example": "json"
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "The field for which the data are sorted. Valid fields are: “download_kbit\", \"upload_kbit\", \"time\", \"signal_strength\", \"lte_rsrp\" and \"ping_ms\"",
            "schema": {
              "type": "string"
            },
            "example": "download_kbit"
          },
          {
            "name": "sort_order",
            "in": "query",
            "description": "The sort_by-Parameter specifies the field, the sort_order-Parameter specifies the direction ('asc' or 'desc').\n Per Default, the results are sorted by the time of the test in descending order (i.e. sort_by=time&sort_order=desc).\n If the sort parameters are specified, the value of the cursor is a multiple of the parameter max_results, otherwise it is an arbitrary number.",
            "schema": {
              "type": "string"
            },
            "example": "asc"
          },
          {
            "name": "max_results",
            "in": "query",
            "description": "This is the page size, i.e. maximum number of result items that are returned per page.\n The default value is 100 items per page. The page size limit is 10000 items, i.e. not more than 10000 results can be displayed in a page.",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 10
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "used for pagination if the query returns more than the number of items according to parameter max_results. The value to be used for the display of the next page is given by the previous response in returned parameter next_cursor.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sender",
            "in": "query",
            "description": "Sender ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "timestamp",
            "in": "query",
            "description": "Alias '_'. Will be ignored and can be used to prevent caching of the response.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "asn",
            "in": "query",
            "description": "Provider asn",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "land_cover",
            "in": "query",
            "description": "Land cover number",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "implausible",
            "in": "query",
            "description": "Implausible",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "pinned",
            "in": "query",
            "description": "Pinned",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ChoicesResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorResponse"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/opentests/O{open_test_uuid}": {
      "get": {
        "tags": [
          "open-test-controller"
        ],
        "summary": "query for OpenTests",
        "description": "Query for a specific measurement result",
        "operationId": "opentest-query",
        "parameters": [
          {
            "name": "open_test_uuid",
            "in": "path",
            "description": "Mandatory. The open-test-uuid of the test.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "Oc1326b7c-4141-42cb-b8c5-922c356a6cee"
          },
          {
            "name": "verbose",
            "in": "query",
            "description": "Optional. If >0 the threadwise speed curve is additionally returned.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 0
          },
          {
            "name": "sender",
            "in": "query",
            "description": "Optional. ID of the sender, for authentification.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/OpenTestDetailsDtoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorResponse"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/export/pdf/{lang}/{fileName}.pdf": {
      "get": {
        "tags": [
          "pdf-export-controller"
        ],
        "summary": "Export open data as PDF",
        "operationId": "exportPdf_2",
        "parameters": [
          {
            "name": "open_test_uuid",
            "in": "query",
            "description": "The UUID of the test.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "loop_uuid",
            "in": "query",
            "description": "The loop UUID of a single loop test",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fileName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lang",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorResponse"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "default response",
            "content": {
              "application/pdf": {}
            }
          }
        }
      }
    },
    "/export/pdf/{fileName}.pdf": {
      "get": {
        "tags": [
          "pdf-export-controller"
        ],
        "summary": "Export open data as PDF",
        "operationId": "exportPdf_3",
        "parameters": [
          {
            "name": "open_test_uuid",
            "in": "query",
            "description": "The UUID of the test.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "loop_uuid",
            "in": "query",
            "description": "The loop UUID of a single loop test",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fileName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorResponse"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "default response",
            "content": {
              "application/pdf": {}
            }
          }
        }
      }
    },
    "/export/netztest-opendata_hours-{hours}.{format}": {
      "get": {
        "tags": [
          "export-controller"
        ],
        "summary": "Export open data as CSV or XLSX",
        "description": "Bulk export open data entries",
        "operationId": "export",
        "parameters": [
          {
            "name": "hours",
            "in": "path",
            "description": "Mandatory. The year that should be exported.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 2017
          },
          {
            "name": "format",
            "in": "path",
            "description": "Mandatory. Either ZIP (CSV) or XLSX.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "xlsx"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorResponse"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "default response",
            "content": {
              "text/csv": {}
            }
          }
        }
      }
    },
    "/export/netztest-opendata.{format}": {
      "get": {
        "tags": [
          "export-controller"
        ],
        "summary": "Export open data as CSV or XLSX",
        "description": "Bulk export open data entries",
        "operationId": "export_1",
        "parameters": [
          {
            "name": "format",
            "in": "path",
            "description": "Mandatory. Either ZIP (CSV) or XLSX.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "xlsx"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorResponse"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "default response",
            "content": {
              "text/csv": {}
            }
          }
        }
      }
    },
    "/export/netztest-opendata-{year}-{month}.{format}": {
      "get": {
        "tags": [
          "export-controller"
        ],
        "summary": "Export open data as CSV or XLSX",
        "description": "Bulk export open data entries",
        "operationId": "export_2",
        "parameters": [
          {
            "name": "year",
            "in": "path",
            "description": "Mandatory. The year that should be exported.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 2017
          },
          {
            "name": "month",
            "in": "path",
            "description": "Mandatory. The year that should be exported.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "example": 0
          },
          {
            "name": "format",
            "in": "path",
            "description": "Mandatory. Either ZIP (CSV) or XLSX.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "xlsx"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorResponse"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "default response",
            "content": {
              "text/csv": {}
            }
          }
        }
      }
    },
    "/admin/usageJSON": {
      "get": {
        "tags": [
          "admin-usage-controller"
        ],
        "operationId": "getAdminUsageJson",
        "parameters": [
          {
            "name": "month",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "year",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "statistic",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "default": []
            }
          },
          {
            "name": "statistic[]",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "default": []
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AdminUsageJsonResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "$ref": "#/components/schemas/ErrorResponse"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      },
      "CoverageDTO": {
        "type": "object",
        "properties": {
          "operator": {
            "type": "string"
          },
          "raster": {
            "type": "string"
          },
          "download_kbit_max": {
            "type": "integer",
            "format": "int32"
          },
          "upload_kbit_max": {
            "type": "integer",
            "format": "int32"
          },
          "download_kbit_normal": {
            "type": "integer",
            "format": "int32"
          },
          "upload_kbit_normal": {
            "type": "integer",
            "format": "int32"
          },
          "technology": {
            "type": "string"
          },
          "last_updated": {
            "type": "string"
          },
          "raster_geo_json": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/Feature"
              },
              {
                "$ref": "#/components/schemas/FeatureCollection"
              },
              {
                "$ref": "#/components/schemas/GeometryCollection"
              },
              {
                "$ref": "#/components/schemas/LineString"
              },
              {
                "$ref": "#/components/schemas/MultiLineString"
              },
              {
                "$ref": "#/components/schemas/MultiPoint"
              },
              {
                "$ref": "#/components/schemas/MultiPolygon"
              },
              {
                "$ref": "#/components/schemas/Point"
              },
              {
                "$ref": "#/components/schemas/Polygon"
              }
            ]
          }
        }
      },
      "CoveragesDTO": {
        "type": "object",
        "properties": {
          "coverages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CoverageDTO"
            }
          },
          "duration_ms": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "Crs": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "name",
              "link"
            ]
          },
          "properties": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          }
        }
      },
      "Feature": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GeoJsonObject"
          },
          {
            "type": "object",
            "properties": {
              "properties": {
                "type": "object",
                "additionalProperties": {
                  "type": "object"
                }
              },
              "geometry": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/Feature"
                  },
                  {
                    "$ref": "#/components/schemas/FeatureCollection"
                  },
                  {
                    "$ref": "#/components/schemas/GeometryCollection"
                  },
                  {
                    "$ref": "#/components/schemas/LineString"
                  },
                  {
                    "$ref": "#/components/schemas/MultiLineString"
                  },
                  {
                    "$ref": "#/components/schemas/MultiPoint"
                  },
                  {
                    "$ref": "#/components/schemas/MultiPolygon"
                  },
                  {
                    "$ref": "#/components/schemas/Point"
                  },
                  {
                    "$ref": "#/components/schemas/Polygon"
                  }
                ]
              },
              "id": {
                "type": "string"
              }
            }
          }
        ]
      },
      "FeatureCollection": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GeoJsonObject"
          },
          {
            "type": "object",
            "properties": {
              "features": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Feature"
                }
              }
            }
          }
        ]
      },
      "GeoJsonObject": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "crs": {
            "$ref": "#/components/schemas/Crs"
          },
          "bbox": {
            "type": "array",
            "items": {
              "type": "number",
              "format": "double"
            }
          },
          "type": {
            "type": "string"
          }
        },
        "discriminator": {
          "propertyName": "type"
        }
      },
      "GeometryCollection": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GeoJsonObject"
          },
          {
            "type": "object",
            "properties": {
              "geometries": {
                "type": "array",
                "items": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/Feature"
                    },
                    {
                      "$ref": "#/components/schemas/FeatureCollection"
                    },
                    {
                      "$ref": "#/components/schemas/GeometryCollection"
                    },
                    {
                      "$ref": "#/components/schemas/LineString"
                    },
                    {
                      "$ref": "#/components/schemas/MultiLineString"
                    },
                    {
                      "$ref": "#/components/schemas/MultiPoint"
                    },
                    {
                      "$ref": "#/components/schemas/MultiPolygon"
                    },
                    {
                      "$ref": "#/components/schemas/Point"
                    },
                    {
                      "$ref": "#/components/schemas/Polygon"
                    }
                  ]
                }
              }
            }
          }
        ]
      },
      "LineString": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GeoJsonObject"
          },
          {
            "type": "object",
            "properties": {
              "coordinates": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LngLatAlt"
                }
              }
            }
          }
        ]
      },
      "LngLatAlt": {
        "type": "object",
        "properties": {
          "longitude": {
            "type": "number",
            "format": "double"
          },
          "latitude": {
            "type": "number",
            "format": "double"
          },
          "altitude": {
            "type": "number",
            "format": "double"
          },
          "additionalElements": {
            "type": "array",
            "items": {
              "type": "number",
              "format": "double"
            }
          }
        }
      },
      "MultiLineString": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GeoJsonObject"
          },
          {
            "type": "object",
            "properties": {
              "coordinates": {
                "type": "array",
                "items": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LngLatAlt"
                  }
                }
              }
            }
          }
        ]
      },
      "MultiPoint": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GeoJsonObject"
          },
          {
            "type": "object",
            "properties": {
              "coordinates": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LngLatAlt"
                }
              }
            }
          }
        ]
      },
      "MultiPolygon": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GeoJsonObject"
          },
          {
            "type": "object",
            "properties": {
              "coordinates": {
                "type": "array",
                "items": {
                  "type": "array",
                  "items": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/LngLatAlt"
                    }
                  }
                }
              }
            }
          }
        ]
      },
      "Point": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GeoJsonObject"
          },
          {
            "type": "object",
            "properties": {
              "coordinates": {
                "$ref": "#/components/schemas/LngLatAlt"
              }
            }
          }
        ]
      },
      "Polygon": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/GeoJsonObject"
          },
          {
            "type": "object",
            "properties": {
              "coordinates": {
                "type": "array",
                "items": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LngLatAlt"
                  }
                }
              }
            }
          }
        ]
      },
      "CapabilitiesRequest": {
        "type": "object",
        "properties": {
          "classification": {
            "$ref": "#/components/schemas/ClassificationRequest"
          },
          "qos": {
            "$ref": "#/components/schemas/QosRequest"
          },
          "RMBThttp": {
            "type": "boolean",
            "description": "True, if the client can handle the RMBThttp protocol",
            "example": true
          }
        }
      },
      "ClassificationRequest": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "description": "Amount of classification items supported by client",
            "format": "int32",
            "example": 5
          }
        }
      },
      "QosRequest": {
        "type": "object",
        "properties": {
          "supports_info": {
            "type": "boolean",
            "description": "True, if client third state (=INFO) is supported",
            "example": true
          }
        }
      },
      "StatisticRequest": {
        "type": "object",
        "properties": {
          "capabilities": {
            "$ref": "#/components/schemas/CapabilitiesRequest"
          },
          "language": {
            "type": "string",
            "description": "The language that should be exported.",
            "example": "en"
          },
          "quantile": {
            "type": "number",
            "description": "Quantile",
            "example": 0.5
          },
          "months": {
            "type": "integer",
            "description": "The month that should be calculated.",
            "format": "int32",
            "example": 1
          },
          "duration": {
            "type": "integer",
            "description": "The duration that should be calculated.",
            "format": "int32",
            "example": 1
          },
          "max_devices": {
            "type": "integer",
            "description": "The number of device that should be calculated.",
            "format": "int32",
            "example": 1
          },
          "type": {
            "type": "string",
            "description": "The type of measurement",
            "example": "mobile"
          },
          "network_type_group": {
            "type": "string",
            "description": "Type of the network, e.g. MOBILE, LAN, WLAN."
          },
          "location_accuracy": {
            "type": "string",
            "description": "Estimation of accuracy of client location in meters"
          },
          "country": {
            "type": "string",
            "description": "The country of measurement in ISO 3166.",
            "example": "en"
          },
          "user_server_selection": {
            "type": "boolean",
            "description": "Legacy"
          },
          "end_date": {
            "type": "string",
            "description": "UTC date and time when calculation was ended yyyy-MM-dd HH:mm:ss"
          },
          "province": {
            "type": "integer",
            "description": "Code of province gkz bev",
            "format": "int32"
          },
          "timezone": {
            "type": "string",
            "description": "Timezone",
            "example": "Europe/Vienna"
          }
        },
        "description": "Statistic request"
      },
      "ApplicationVersionResponse": {
        "type": "object",
        "properties": {
          "version": {
            "type": "string"
          },
          "system_UUID": {
            "type": "string"
          },
          "host": {
            "type": "string"
          }
        }
      },
      "HourlyStatisticResponse": {
        "type": "object",
        "properties": {
          "quantile_down": {
            "type": "number",
            "format": "double"
          },
          "quantile_up": {
            "type": "number",
            "format": "double"
          },
          "quantile_ping": {
            "type": "number",
            "format": "double"
          },
          "hour": {
            "type": "number",
            "format": "float"
          },
          "count": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "BucketResponse": {
        "type": "object",
        "properties": {
          "lower_bound": {
            "type": "number",
            "format": "double"
          },
          "upper_bound": {
            "type": "number",
            "format": "double"
          },
          "results": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "HistogramResponse": {
        "type": "object",
        "properties": {
          "download_kbit": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BucketResponse"
            }
          },
          "download_kbit_fine": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BucketResponse"
            }
          },
          "upload_kbit": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BucketResponse"
            }
          },
          "upload_kbit_fine": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BucketResponse"
            }
          },
          "ping_ms": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BucketResponse"
            }
          },
          "ping_ms_fine": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BucketResponse"
            }
          }
        }
      },
      "ChoicesResponse": {
        "type": "object",
        "properties": {
          "country_mobile": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "provider_mobile": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "provider": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "CellInfo2G": {
        "type": "object",
        "properties": {
          "lac": {
            "type": "integer",
            "format": "int32"
          },
          "cid": {
            "type": "integer",
            "format": "int32"
          },
          "bsic": {
            "type": "integer",
            "format": "int32"
          },
          "arfcn": {
            "type": "integer",
            "format": "int32"
          },
          "band": {
            "type": "integer",
            "format": "int32"
          },
          "frequency_dl": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "CellInfo3G": {
        "type": "object",
        "properties": {
          "lac": {
            "type": "integer",
            "format": "int32"
          },
          "cid": {
            "type": "integer",
            "format": "int32"
          },
          "psc": {
            "type": "integer",
            "format": "int32"
          },
          "uarfcn": {
            "type": "integer",
            "format": "int32"
          },
          "band": {
            "type": "integer",
            "format": "int32"
          },
          "frequency_dl": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "CellInfo4G": {
        "type": "object",
        "properties": {
          "tac": {
            "type": "integer",
            "format": "int32"
          },
          "ci": {
            "type": "integer",
            "format": "int32"
          },
          "pci": {
            "type": "integer",
            "format": "int32"
          },
          "earfcn": {
            "type": "integer",
            "format": "int32"
          },
          "band": {
            "type": "integer",
            "format": "int32"
          },
          "frequency_dl": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "CellInfo5G": {
        "type": "object",
        "properties": {
          "nrArfcn": {
            "type": "integer",
            "format": "int32",
            "writeOnly": true
          },
          "nci": {
            "type": "integer",
            "description": "New Radio Cell Identity, 36 bit",
            "format": "int64"
          },
          "pci": {
            "type": "integer",
            "description": "physical cell id, [0, 1007]",
            "format": "int32"
          },
          "tac": {
            "type": "integer",
            "description": "tracking area code. 24 bit",
            "format": "int32"
          },
          "nrarfcn": {
            "type": "integer",
            "description": "New Radio Absolute Radio Frequency Channel Number",
            "format": "int32"
          },
          "band": {
            "type": "integer",
            "format": "int32"
          },
          "frequency_dl": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "LocationGraphItem": {
        "type": "object",
        "properties": {
          "long": {
            "type": "number",
            "format": "double"
          },
          "lat": {
            "type": "number",
            "format": "double"
          },
          "loc_accuracy": {
            "type": "number",
            "format": "double"
          },
          "bearing": {
            "type": "number",
            "format": "double"
          },
          "speed": {
            "type": "number",
            "format": "double"
          },
          "altitude": {
            "type": "number",
            "format": "double"
          },
          "loc_src": {
            "type": "string"
          },
          "time_elapsed": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "OpenTestDetailsDtoResponse": {
        "type": "object",
        "properties": {
          "distance": {
            "type": "number",
            "format": "double"
          },
          "cat_technology": {
            "type": "string"
          },
          "network_type": {
            "type": "string"
          },
          "loc_src": {
            "type": "string"
          },
          "public_ip_as_name": {
            "type": "string"
          },
          "zip_code": {
            "type": "integer",
            "format": "int64"
          },
          "kg_nr": {
            "type": "integer",
            "format": "int32"
          },
          "gkz": {
            "type": "integer",
            "format": "int32"
          },
          "gkz_sa": {
            "type": "integer",
            "format": "int32"
          },
          "land_cover": {
            "type": "integer",
            "format": "int32"
          },
          "locality": {
            "type": "string"
          },
          "community": {
            "type": "string"
          },
          "district": {
            "type": "string"
          },
          "province": {
            "type": "string"
          },
          "lte_rsrq": {
            "type": "integer",
            "format": "int64"
          },
          "server_name": {
            "type": "string"
          },
          "implausible": {
            "type": "boolean"
          },
          "pinned": {
            "type": "boolean"
          },
          "test_duration": {
            "type": "integer",
            "format": "int64"
          },
          "num_threads_requested": {
            "type": "integer",
            "format": "int64"
          },
          "num_threads": {
            "type": "integer",
            "format": "int64"
          },
          "num_threads_ul": {
            "type": "integer",
            "format": "int64"
          },
          "model": {
            "type": "string"
          },
          "model_native": {
            "type": "string"
          },
          "product": {
            "type": "string"
          },
          "client_version": {
            "type": "string"
          },
          "network_mcc_mnc": {
            "type": "string"
          },
          "network_country": {
            "type": "string"
          },
          "roaming_type": {
            "type": "integer",
            "format": "int64"
          },
          "network_name": {
            "type": "string"
          },
          "sim_mcc_mnc": {
            "type": "string"
          },
          "sim_country": {
            "type": "string"
          },
          "connection": {
            "type": "string"
          },
          "asn": {
            "type": "integer",
            "format": "int64"
          },
          "ip_anonym": {
            "type": "string"
          },
          "ndt_download_kbit": {
            "type": "integer",
            "format": "int64"
          },
          "ndt_upload_kbit": {
            "type": "integer",
            "format": "int64"
          },
          "country_geoip": {
            "type": "string"
          },
          "country_asn": {
            "type": "string"
          },
          "country_location": {
            "type": "string"
          },
          "bytes_download": {
            "type": "integer",
            "format": "int64"
          },
          "bytes_upload": {
            "type": "integer",
            "format": "int64"
          },
          "test_if_bytes_download": {
            "type": "integer",
            "format": "int64"
          },
          "test_if_bytes_upload": {
            "type": "integer",
            "format": "int64"
          },
          "testdl_if_bytes_download": {
            "type": "integer",
            "format": "int64"
          },
          "testdl_if_bytes_upload": {
            "type": "integer",
            "format": "int64"
          },
          "testul_if_bytes_download": {
            "type": "integer",
            "format": "int64"
          },
          "testul_if_bytes_upload": {
            "type": "integer",
            "format": "int64"
          },
          "duration_download_ms": {
            "type": "number",
            "format": "double"
          },
          "duration_upload_ms": {
            "type": "number",
            "format": "double"
          },
          "time_dl_ms": {
            "type": "number",
            "format": "double"
          },
          "time_ul_ms": {
            "type": "number",
            "format": "double"
          },
          "channel_number": {
            "type": "integer",
            "format": "int64"
          },
          "radio_band": {
            "type": "integer",
            "format": "int64"
          },
          "cell_area_code": {
            "type": "integer",
            "format": "int64"
          },
          "cell_location_id": {
            "type": "integer",
            "format": "int64"
          },
          "error": {
            "type": "string"
          },
          "wifi_link_speed": {
            "type": "integer",
            "format": "int64"
          },
          "settlement_type": {
            "type": "integer",
            "format": "int32"
          },
          "link_id": {
            "type": "integer",
            "format": "int64"
          },
          "link_name": {
            "type": "string"
          },
          "link_distance": {
            "type": "integer",
            "format": "int32"
          },
          "edge_id": {
            "type": "integer",
            "format": "int64"
          },
          "link_name1": {
            "type": "string"
          },
          "link_name2": {
            "type": "string"
          },
          "link_frc": {
            "type": "integer",
            "format": "int32"
          },
          "dtm_level": {
            "type": "integer",
            "format": "int32"
          },
          "temperature": {
            "type": "number",
            "format": "double"
          },
          "atraster100": {
            "type": "string"
          },
          "atraster250": {
            "type": "string"
          },
          "speed_curve": {
            "$ref": "#/components/schemas/OpenTestGraphDTO"
          },
          "speed_curve_threadwise": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SpeedItemThreadwise"
                }
              }
            }
          },
          "open_uuid": {
            "type": "string"
          },
          "open_test_uuid": {
            "type": "string"
          },
          "time": {
            "type": "string"
          },
          "lat": {
            "type": "number",
            "format": "double"
          },
          "long": {
            "type": "number",
            "format": "double"
          },
          "loc_accuracy": {
            "type": "number",
            "format": "double"
          },
          "download_kbit": {
            "type": "integer",
            "format": "int32"
          },
          "upload_kbit": {
            "type": "integer",
            "format": "int32"
          },
          "ping_ms": {
            "type": "number",
            "format": "double"
          },
          "signal_strength": {
            "type": "integer",
            "format": "int32"
          },
          "lte_rsrp": {
            "type": "integer",
            "format": "int32"
          },
          "platform": {
            "type": "string"
          },
          "provider_name": {
            "type": "string"
          },
          "download_classification": {
            "type": "integer",
            "format": "int32"
          },
          "upload_classification": {
            "type": "integer",
            "format": "int32"
          },
          "ping_classification": {
            "type": "integer",
            "format": "int32"
          },
          "signal_classification": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "OpenTestGraphDTO": {
        "type": "object",
        "properties": {
          "download": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SpeedGraphItemDTO"
            }
          },
          "upload": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SpeedGraphItemDTO"
            }
          },
          "ping": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PingGraphItemDTO"
            }
          },
          "signal": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SignalGraphItemDTO"
            }
          },
          "location": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocationGraphItem"
            }
          }
        }
      },
      "PingGraphItemDTO": {
        "type": "object",
        "properties": {
          "ping_ms": {
            "type": "number",
            "format": "double"
          },
          "time_elapsed": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "SignalGraphItemDTO": {
        "type": "object",
        "properties": {
          "time_elapsed": {
            "type": "integer",
            "format": "int64"
          },
          "network_type": {
            "type": "string"
          },
          "signal_strength": {
            "type": "integer",
            "format": "int32"
          },
          "lte_rsrp": {
            "type": "integer",
            "format": "int32"
          },
          "lte_rsrq": {
            "type": "integer",
            "format": "int32"
          },
          "lte_snr": {
            "type": "integer",
            "format": "int32"
          },
          "nr_rsrp": {
            "type": "integer",
            "format": "int32"
          },
          "nr_rsrq": {
            "type": "integer",
            "format": "int32"
          },
          "nr_snr": {
            "type": "integer",
            "format": "int32"
          },
          "cat_technology": {
            "type": "string"
          },
          "timing_advance": {
            "type": "integer",
            "format": "int32"
          },
          "cell_info_2G": {
            "$ref": "#/components/schemas/CellInfo2G"
          },
          "cell_info_3G": {
            "$ref": "#/components/schemas/CellInfo3G"
          },
          "cell_info_4G": {
            "$ref": "#/components/schemas/CellInfo4G"
          },
          "cell_info_5G": {
            "$ref": "#/components/schemas/CellInfo5G"
          }
        }
      },
      "SpeedGraphItemDTO": {
        "type": "object",
        "properties": {
          "bytes_total": {
            "type": "integer",
            "format": "int64"
          },
          "time_elapsed": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "SpeedItemThreadwise": {
        "type": "object",
        "properties": {
          "bytes_total": {
            "type": "integer",
            "format": "int64"
          },
          "time_elapsed_ns": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "AdminUsageJsonResponse": {
        "type": "object",
        "properties": {
          "platforms": {
            "$ref": "#/components/schemas/SumsAndValuesResponse"
          },
          "platforms_loopmode": {
            "$ref": "#/components/schemas/SumsAndValuesResponse"
          },
          "usage": {
            "$ref": "#/components/schemas/SumsAndValuesResponse"
          },
          "versions_ios": {
            "$ref": "#/components/schemas/SumsAndValuesResponse"
          },
          "versions_android": {
            "$ref": "#/components/schemas/SumsAndValuesResponse"
          },
          "versions_applet": {
            "$ref": "#/components/schemas/SumsAndValuesResponse"
          },
          "network_group_names": {
            "$ref": "#/components/schemas/SumsAndValuesResponse"
          },
          "network_group_types": {
            "$ref": "#/components/schemas/SumsAndValuesResponse"
          },
          "platforms_qos": {
            "$ref": "#/components/schemas/SumsAndValuesResponse"
          }
        }
      },
      "SumsAndValuesResponse": {
        "type": "object",
        "properties": {
          "sums": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SumsResponse"
            }
          },
          "values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValuesResponse"
            }
          }
        }
      },
      "SumsResponse": {
        "type": "object",
        "properties": {
          "field": {
            "type": "string"
          },
          "sum": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ValueResponse": {
        "type": "object",
        "properties": {
          "field": {
            "type": "string"
          },
          "value": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "ValuesResponse": {
        "type": "object",
        "properties": {
          "day": {
            "type": "integer",
            "format": "int64"
          },
          "values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValueResponse"
            }
          }
        }
      }
    }
  }
}
